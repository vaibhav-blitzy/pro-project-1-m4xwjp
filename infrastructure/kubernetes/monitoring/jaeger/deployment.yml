apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger
  namespace: production
  labels:
    app: jaeger
    component: monitoring
    version: '1.35'
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '16686'
    prometheus.io/path: '/metrics'
    security.policy/scan-verified: 'true'
    deployment.kubernetes.io/revision-history-limit: '5'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      labels:
        app: jaeger
        component: monitoring
        version: '1.35'
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '16686'
    spec:
      containers:
        - name: jaeger
          image: jaegertracing/all-in-one:1.35
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 16686
              protocol: TCP
            - name: grpc
              containerPort: 14250
              protocol: TCP
            - name: collector
              containerPort: 14268
              protocol: TCP
            - name: zipkin
              containerPort: 9411
              protocol: TCP
          resources:
            limits:
              memory: '1Gi'
              cpu: '1000m'
            requests:
              memory: '512Mi'
              cpu: '500m'
          env:
            - name: COLLECTOR_ZIPKIN_HOST_PORT
              value: ':9411'
            - name: MEMORY_MAX_TRACES
              value: '50000'
            - name: QUERY_BASE_PATH
              value: '/jaeger'
            - name: SAMPLING_STRATEGIES_FILE
              value: '/etc/jaeger/sampling.json'
          readinessProbe:
            httpGet:
              path: '/'
              port: 16686
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: '/'
              port: 16686
            initialDelaySeconds: 15
            periodSeconds: 30
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      terminationGracePeriodSeconds: 30
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0