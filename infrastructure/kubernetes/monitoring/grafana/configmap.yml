apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: production
  labels:
    app: grafana
    component: monitoring
    part-of: observability-stack
    managed-by: kubernetes
data:
  grafana.ini: |
    [server]
    protocol = https
    http_port = 3000
    domain = grafana.local
    root_url = %(protocol)s://%(domain)s/
    serve_from_sub_path = true
    read_timeout = 30s
    write_timeout = 30s
    max_connections = 10000

    [security]
    admin_user = admin
    admin_password = ${GRAFANA_ADMIN_PASSWORD}
    secret_key = ${GRAFANA_SECRET_KEY}
    disable_gravatar = true
    cookie_secure = true
    cookie_samesite = strict
    allow_embedding = false
    strict_transport_security = true
    strict_transport_security_max_age_seconds = 31536000
    content_security_policy = true
    x_content_type_options = true
    x_xss_protection = true

    [auth]
    disable_login_form = false
    disable_signout_menu = false
    oauth_auto_login = false
    login_maximum_inactive_lifetime_duration = 7d
    login_maximum_lifetime_duration = 30d
    token_rotation_interval_minutes = 10

    [users]
    allow_sign_up = false
    auto_assign_org = true
    auto_assign_org_role = Viewer
    default_theme = dark
    viewers_can_edit = false
    editors_can_admin = false

    [dashboards]
    versions_to_keep = 20
    min_refresh_interval = 5s
    default_home_dashboard_path = /etc/grafana/provisioning/dashboards/home.json
    auto_prune_enabled = true

    [alerting]
    enabled = true
    execute_alerts = true
    error_or_timeout = alerting
    nodata_or_nullvalues = alerting
    concurrent_render_limit = 5
    evaluation_timeout_seconds = 30
    notification_timeout_seconds = 30
    max_attempts = 3

    [metrics]
    enabled = true
    interval_seconds = 10
    basic_auth_username = ${METRICS_USERNAME}
    basic_auth_password = ${METRICS_PASSWORD}
    disable_total_stats = false

    [log]
    mode = console file
    level = info
    filters = monitoring:debug
    console_level = info
    console_format = json

    [analytics]
    reporting_enabled = false
    check_for_updates = true

  datasources.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus-service:9090
        isDefault: true
        version: 1
        editable: false
        jsonData:
          timeInterval: 5s
          queryTimeout: 30s
          httpMethod: POST
          keepCookies: []
          scrapeInterval: 5s
          exemplarTraceIdDestinations:
            - name: traceID
              datasourceUid: jaeger

      - name: Elasticsearch
        type: elasticsearch
        access: proxy
        url: http://elasticsearch-service:9200
        database: "[logstash-]YYYY.MM.DD"
        isDefault: false
        version: 1
        editable: false
        jsonData:
          timeField: "@timestamp"
          esVersion: 7.0.0
          maxConcurrentShardRequests: 5
          logMessageField: message
          logLevelField: level
          interval: Daily
          timeInterval: 5s
          queryTimeout: 30s

      - name: Jaeger
        type: jaeger
        access: proxy
        url: http://jaeger-query:16686
        isDefault: false
        version: 1
        editable: false
        jsonData:
          nodeGraph:
            enabled: true
          tracesToLogs:
            datasourceUid: elasticsearch
            tags:
              - instance
              - pod
              - namespace
            mappedTags:
              - key: trace_id
                value: trace.id