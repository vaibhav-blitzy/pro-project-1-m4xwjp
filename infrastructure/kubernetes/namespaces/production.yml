# Kubernetes Production Namespace Configuration
# Version: v1.24+
# Purpose: Define production environment with enterprise-grade security and resource management

---
apiVersion: v1
kind: Namespace
metadata:
  name: production
  labels:
    name: production
    environment: production
    monitoring: enabled
    logging: enabled
    region: multi-region
    security-tier: restricted
    backup-policy: enabled
    compliance: enforced
  annotations:
    scheduler.alpha.kubernetes.io/node-selector: env=production
    net.beta.kubernetes.io/network-policy: enabled
    security.alpha.kubernetes.io/pod-security-policy: restricted
    monitoring.alpha.kubernetes.io/scrape: "true"
    backup.alpha.kubernetes.io/schedule: "0 */6 * * *"
spec:
  finalizers:
    - kubernetes

---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: production-quota
  namespace: production
spec:
  hard:
    # Compute Resources
    requests.cpu: "32"
    requests.memory: 64Gi
    limits.cpu: "48"
    limits.memory: 96Gi
    
    # Storage Resources
    requests.storage: 500Gi
    limits.storage: 1Ti
    
    # Object Count Limits
    pods: "100"
    services: "50"
    secrets: "100"
    configmaps: "50"
    persistentvolumeclaims: "50"
    replicationcontrollers: "50"
    deployments.apps: "50"
    statefulsets.apps: "20"
    horizontalpodautoscalers.autoscaling: "20"

---
apiVersion: v1
kind: LimitRange
metadata:
  name: production-limits
  namespace: production
spec:
  limits:
    - type: Container
      default:
        cpu: 500m
        memory: 512Mi
      defaultRequest:
        cpu: 100m
        memory: 128Mi
      max:
        cpu: "4"
        memory: 8Gi
      min:
        cpu: 50m
        memory: 64Mi
    - type: Pod
      max:
        cpu: "8"
        memory: 16Gi

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: production-network-policy
  namespace: production
spec:
  podSelector: {}
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: monitoring
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: logging
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: ingress-nginx
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: cert-manager
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: kube-system
        - podSelector:
            matchLabels:
              app: prometheus
        - podSelector:
            matchLabels:
              app: fluentd
        - podSelector:
            matchLabels:
              app: datadog
      ports:
        - protocol: TCP
          port: 80
        - protocol: TCP
          port: 443
        - protocol: TCP
          port: 8080
        - protocol: TCP
          port: 9090
  egress:
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
            except:
              - 169.254.0.0/16
              - 172.16.0.0/12
              - 192.168.0.0/16
      ports:
        - protocol: TCP
          port: 443
        - protocol: UDP
          port: 53

---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: production-psp
  namespace: production
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'persistentVolumeClaim'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'MustRunAsNonRoot'
    ranges:
      - min: 1000
        max: 65535
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      - min: 1000
        max: 65535
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      - min: 1000
        max: 65535
  readOnlyRootFilesystem: true