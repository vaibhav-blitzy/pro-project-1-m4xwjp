# Kubernetes Service configuration for Task Management System backend services
# Version: 1.0.0
# Provides service discovery and load balancing for backend microservices
apiVersion: v1
kind: Service
metadata:
  name: api-gateway-service
  namespace: backend
  labels:
    app: task-management
    component: api-gateway
    tier: backend
  annotations:
    # Prometheus monitoring annotations
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
    # Service mesh annotations
    service.mesh/protocol: "http"
    service.mesh/retries: "3"
    service.mesh/timeout: "10s"
spec:
  type: ClusterIP
  selector:
    app: api-gateway
    tier: backend
    environment: ${ENV}
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 3000
    - name: metrics
      protocol: TCP
      port: 9090
      targetPort: 9090
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: backend
  labels:
    app: task-management
    component: auth-service
    tier: backend
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
    service.mesh/protocol: "http"
    service.mesh/retries: "3"
    service.mesh/timeout: "5s"
spec:
  type: ClusterIP
  selector:
    app: auth-service
    tier: backend
    environment: ${ENV}
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 3001
    - name: metrics
      protocol: TCP
      port: 9090
      targetPort: 9090
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 7200
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: backend-network-policy
  namespace: backend
spec:
  podSelector:
    matchLabels:
      tier: backend
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: backend
        - podSelector:
            matchLabels:
              app: api-gateway
      ports:
        - protocol: TCP
          port: 80
        - protocol: TCP
          port: 9090
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              name: backend
        - podSelector:
            matchLabels:
              tier: backend
      ports:
        - protocol: TCP
          port: 80
        - protocol: TCP
          port: 9090
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: backend-pdb
  namespace: backend
spec:
  minAvailable: 2
  selector:
    matchLabels:
      tier: backend